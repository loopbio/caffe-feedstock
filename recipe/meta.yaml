{% extends "base.yaml" %}

{% block recipe %}

package:
  name: caffe
  version: {{ caffe_version }}

source:
  fn: caffe_{{ caffe_version }}.tar.gz
  url: https://github.com/BVLC/caffe/archive/{{ version_postfix }}.tar.gz
  sha1: 7511c051a451f091fdf2cbd9b69be014fdc61f9b

build:
  number: 0
  skip: true  # [not linux]
  features:
    - blas_{{ blas_variant }}
    - caffe_{{ cuda_cudnn_version }}  # need this to allow installing caffe cpu even if cuda is there
    - cuda{{ cuda_version }}          # need this to force the user knows about cuda requirements
    - cudnn{{ cudnn_version }}        # need this to force the user knows about cudnn requirements
    # Unfortunately one cannot make conda features depend on other features.
    # At this stage, this is profoundly redundant, getting descriptors like:
    #   caffe-1.0.0rc5-np111py27_blas_openblas_caffe_8.0_5.1_cuda8.0_cudnn5.1_0
    # Oh well...

requirements:
  build:
    - cmake
    - cython
    - blas 1.1 {{ blas_variant }}
    - openblas 0.2.19|0.2.19.*
    - boost 1.63.*
    - hdf5 1.8.17|1.8.17.*
    - gflags
    - glog
    - h5py
    - ipython
    - leveldb
    - lmdb
    - matplotlib
    - networkx
    - nose
    - numpy x.x
    - opencv 3.*
    - pandas
    - pillow
    - protobuf
    - python
    - python-dateutil
    - python-gflags
    - python-leveldb
    - pyyaml
    - scikit-image
    - scipy
    - six
    - snappy

  run:
    - blas 1.1 {{ blas_variant }}
    - openblas 0.2.19|0.2.19.*
    - boost 1.63.*
    - hdf5 1.8.17|1.8.17.*
    - gflags
    - glog
    - h5py
    - ipython
    - leveldb
    - lmdb
    - matplotlib
    - networkx
    - numpy x.x
    - opencv 3.*
    - pandas
    - pillow
    - protobuf
    - python
    - python-dateutil
    - python-gflags
    - python-leveldb
    - pyyaml
    - scikit-image
    - scipy
    - six
    - snappy

test:

  source_files:
    - python/caffe/test

  requires:
    - pytest
    - caffe-cuda-feature {{ caffe_cuda_cudnn_version }}
    - cuda-feature {{ cuda_version }}
    - cudnn-feature {{ cudnn_version }}
    # Conda requires the feature to be present at testing
    # Otherwise the package won't be installed

  commands:
    # Test commands.
    - command -v "${PREFIX}/bin/caffe"
    - command -v "${PREFIX}/bin/classification"
    - command -v "${PREFIX}/bin/classify"
    - command -v "${PREFIX}/bin/compute_image_mean"
    - command -v "${PREFIX}/bin/convert_cifar_data"
    - command -v "${PREFIX}/bin/convert_imageset"
    - command -v "${PREFIX}/bin/convert_mnist_data"
    - command -v "${PREFIX}/bin/convert_mnist_siamese_data"
    - command -v "${PREFIX}/bin/detect"
    - command -v "${PREFIX}/bin/device_query"
    - command -v "${PREFIX}/bin/draw_net"
    - command -v "${PREFIX}/bin/extract_features"
    - command -v "${PREFIX}/bin/finetune_net"
    - command -v "${PREFIX}/bin/net_speed_benchmark"
    - command -v "${PREFIX}/bin/test_net"
    - command -v "${PREFIX}/bin/train_net"
    - command -v "${PREFIX}/bin/upgrade_net_proto_binary"
    - command -v "${PREFIX}/bin/upgrade_net_proto_text"
    - command -v "${PREFIX}/bin/upgrade_solver_proto_text"

    # Test includes.
    - test -d "${PREFIX}/include/caffe"

    # Test libraries.
    - test -f "${PREFIX}/lib/libcaffe.so"

    # Run python tests (N.B. all tests also run in build script)
    - py.test python/caffe/test

  imports:
    - caffe

{% endblock %}
